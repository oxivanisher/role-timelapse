---
- name: Install required package
  ansible.builtin.package:
    name:
      - rsync
      - libcamera-apps-lite
    state: present

- name: Disable motion service
  ansible.builtin.systemd:
    name: motion
    masked: true

- name: Ensure path for scripts (/opt/timelapse)
  ansible.builtin.file:
    path: /opt/timelapse
    state: directory
    owner: root
    group: root
    mode: "0750"

- name: Deploy timelapse script
  ansible.builtin.template:
    src: timelapse.py.jinja2
    dest: /opt/timelapse/timelapse.py
    owner: root
    group: root
    mode: "0750"
  notify: Kill timelapse.py

- name: Ensure timelapse cronjob
  ansible.builtin.cron:
    name: "Take timelapse pictures"
    minute: "*"
    hour: "*"
    job: "/usr/bin/python3 /opt/timelapse/timelapse.py"

- name: Deploy timelapse sync script
  ansible.builtin.template:
    src: timelapse-sync.sh.jinja2
    dest: /opt/timelapse/timelapse-sync.sh
    owner: root
    group: root
    mode: "0750"

- name: Ensure timelapse upload cronjob
  ansible.builtin.cron:
    name: "Sync timelapse pictures"
    minute: "*/5"
    hour: "*"
    job: "perl -le 'sleep rand 150' && /opt/timelapse/timelapse-sync.sh >/dev/null"

- name: Install lighttpd server and imagemagick
  ansible.builtin.package:
    name:
      - lighttpd
      - imagemagick
    state: present

- name: Ensure lighttpd is enabled
  ansible.builtin.systemd:
    name: lighttpd.service
    state: started
    enabled: true

- name: Deploy index.html file
  ansible.builtin.copy:
    src: index.html
    dest: /var/www/html/index.html
    owner: www-data
    group: www-data
    mode: "0644"

# ensure mounted boot
- name: Override config.txt location for Raspberry Pi OS version before bookworm
  ansible.builtin.set_fact:
    timelapse_config_dir: /boot
  when: ansible_distribution_major_version | int < 12

- name: Mount boot
  ansible.posix.mount:
    path: "{{ timelapse_config_dir }}"
    state: mounted
    src: /dev/mmcblk0p1
    fstype: vfat
  changed_when: false

- name: "Set config.txt for greyworld awb to {{ timelapse_greyworld_awb }}"
  ansible.builtin.lineinfile:
    path: "{{ timelapse_config_dir }}/config.txt"
    regexp: "^awb_auto_is_greyworld"
    line: "awb_auto_is_greyworld={{ timelapse_greyworld_awb }}"
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"

- name: Enable camera overlay
  ansible.builtin.lineinfile:
    path: "{{ timelapse_config_dir }}/config.txt"
    regexp: "^dtoverlay=imx219"
    line: "dtoverlay=imx219"
  notify: Reboot required
  ignore_errors: "{{ ansible_check_mode }}"

- name: "Ensure the tl upload server can be looked up"
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "timelapse_upload_server ipv4"
    line: "{{ timelapse_upload_server_ip }}      {{ timelapse_upload_server }} #timelapse_upload_server ipv4"

- name: "Ensure the tl upload server can be looked up via ipv6"
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "timelapse_upload_server ipv6"
    line: "{{ timelapse_upload_server_ip6 }}      {{ timelapse_upload_server }} #timelapse_upload_server ipv6"
